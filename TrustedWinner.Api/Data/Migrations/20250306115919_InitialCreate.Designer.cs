// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrustedWinner.Api.Data;

#nullable disable

namespace TrustedWinner.Api.Migrations
{
    [DbContext(typeof(DrawDbContext))]
    [Migration("20250306115919_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("TrustedWinner.Api.Models.AuditableResult", b =>
                {
                    b.Property<Guid>("DrawId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DrawId");

                    b.ToTable("AuditableResults");
                });

            modelBuilder.Entity("TrustedWinner.Api.Models.Draw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContestId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SeedAdditionalEntropy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SeedRandomPart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SeedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContestId", "Title")
                        .IsUnique();

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("TrustedWinner.Api.Models.AuditableResult", b =>
                {
                    b.HasOne("TrustedWinner.Api.Models.Draw", null)
                        .WithOne()
                        .HasForeignKey("TrustedWinner.Api.Models.AuditableResult", "DrawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
